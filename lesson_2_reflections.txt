What happens when you initialize a repository? Why do you need to do it?
  A directory with the name .git is created. the directory contain the files git uses to track the repository, this is important in order for git to operate.
  

How is the staging area different from the working directory and the repository?
What value do you think it offers?
  staging area is a middle area between the working directory and repository, in which files are added and changes tracked and then comitted. It offers the possiblity of changing files and making comitte later.


How can you use the staging area to make sure you have one commit per logical
change?

  by adding files to the staging area and compare them the version in the working directory, then commit the changes per logical change.


What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
  In case of exprimenting new features or making versions of the project for other puropse. It helps by organizing the code and make it more possible to take risk because it can be easly undo.


How do the diagrams help you visualize the branch structure?
  it makes it easier to understand where is our location, and to show the created branches, and understand what will happen if we checkout to an older commit, it's just pritty cool

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

  merging two branches add the changes been made in both branches into a single branch by compering to the older version. we use diagram to make it easy for us to track what changes has been introduced in the final branch.

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
  
  With automatic merging no need to search for every change that was made in the two branches, however manual merges is useful in case of confution in code, but it's kinda tiredsome.
